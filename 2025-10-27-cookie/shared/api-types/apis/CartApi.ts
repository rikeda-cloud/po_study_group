/* tslint:disable */
/* eslint-disable */
/**
 * Cookie & Session Step1
 * Cookie & Session勉強会 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiStep1ItemsPostRequest,
} from '../models/index';
import {
    ApiStep1ItemsPostRequestFromJSON,
    ApiStep1ItemsPostRequestToJSON,
} from '../models/index';

export interface ApiStep1ItemsGetRequest {
    cart?: string;
}

export interface ApiStep1ItemsItemIdDeleteRequest {
    itemId: number;
    cart?: string;
}

export interface ApiStep1ItemsPostOperationRequest {
    apiStep1ItemsPostRequest: ApiStep1ItemsPostRequest;
    cart?: string;
}

/**
 * 
 */
export class CartApi extends runtime.BaseAPI {

    /**
     * カート内の情報を取得
     */
    async apiStep1ItemsGetRaw(requestParameters: ApiStep1ItemsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/step1/items`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * カート内の情報を取得
     */
    async apiStep1ItemsGet(requestParameters: ApiStep1ItemsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiStep1ItemsGetRaw(requestParameters, initOverrides);
    }

    /**
     * パスに含まれる商品をCookieから削除
     */
    async apiStep1ItemsItemIdDeleteRaw(requestParameters: ApiStep1ItemsItemIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['itemId'] == null) {
            throw new runtime.RequiredError(
                'itemId',
                'Required parameter "itemId" was null or undefined when calling apiStep1ItemsItemIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/step1/items/{itemId}`;
        urlPath = urlPath.replace(`{${"itemId"}}`, encodeURIComponent(String(requestParameters['itemId'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * パスに含まれる商品をCookieから削除
     */
    async apiStep1ItemsItemIdDelete(requestParameters: ApiStep1ItemsItemIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiStep1ItemsItemIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * リクエストボディに含まれる商品をCookieに追加
     */
    async apiStep1ItemsPostRaw(requestParameters: ApiStep1ItemsPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['apiStep1ItemsPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiStep1ItemsPostRequest',
                'Required parameter "apiStep1ItemsPostRequest" was null or undefined when calling apiStep1ItemsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/step1/items`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiStep1ItemsPostRequestToJSON(requestParameters['apiStep1ItemsPostRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * リクエストボディに含まれる商品をCookieに追加
     */
    async apiStep1ItemsPost(requestParameters: ApiStep1ItemsPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiStep1ItemsPostRaw(requestParameters, initOverrides);
    }

}
